{"abi":[{"type":"error","name":"BitInvalidatedOrder","inputs":[]}],"bytecode":{"object":"0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212205381017756faa1c18f1a8347e3b6e772dfcfa797b3a4fc0e1977c4d04dc8d52e64736f6c63430008170033","sourceMap":"653:2302:79:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x5f80fdfea26469706673582212205381017756faa1c18f1a8347e3b6e772dfcfa797b3a4fc0e1977c4d04dc8d52e64736f6c63430008170033","sourceMap":"653:2302:79:-:0;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BitInvalidatedOrder\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"The library provides a mechanism to invalidate objects based on a bit invalidator. The bit invalidator holds a mapping where each key represents a slot number and each value contains an integer. Each bit of the integer represents whether the object with corresponding index is valid or has been invalidated (0 - valid, 1 - invalidated). The nonce given to access or invalidate an entity's state follows this structure: - bits [0..7] represent the object state index in the slot. - bits [8..255] represent the slot number (mapping key).\",\"errors\":{\"BitInvalidatedOrder()\":[{\"details\":\"The error is thrown when an attempt is made to invalidate an already invalidated entity.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"BitInvalidatorLib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/BitInvalidatorLib.sol\":\"BitInvalidatorLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@1inch/limit-order-protocol/contracts/=lib/limit-order-protocol/contracts/\",\":@1inch/solidity-utils/contracts/=lib/solidity-utils/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":limit-order-protocol/=lib/limit-order-protocol/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-utils/=lib/solidity-utils/contracts/\"],\"viaIR\":true},\"sources\":{\"src/libraries/BitInvalidatorLib.sol\":{\"keccak256\":\"0xcf60342414e15e500c6d5e106c84fb5c4c479a0627b147c8f61c4af3fbf6dec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9fdd6877d3d4a3d628f0eb1851a27482b41cdc19cf954d4919cd323b1c91e4\",\"dweb:/ipfs/Qmbs4FRzAhPw2rkEMEp2LRm4NbcFiNEeS12hrb9nUfFL7f\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"BitInvalidatedOrder"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@1inch/limit-order-protocol/contracts/=lib/limit-order-protocol/contracts/","@1inch/solidity-utils/contracts/=lib/solidity-utils/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","limit-order-protocol/=lib/limit-order-protocol/contracts/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity-utils/=lib/solidity-utils/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/BitInvalidatorLib.sol":"BitInvalidatorLib"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"src/libraries/BitInvalidatorLib.sol":{"keccak256":"0xcf60342414e15e500c6d5e106c84fb5c4c479a0627b147c8f61c4af3fbf6dec0","urls":["bzz-raw://8a9fdd6877d3d4a3d628f0eb1851a27482b41cdc19cf954d4919cd323b1c91e4","dweb:/ipfs/Qmbs4FRzAhPw2rkEMEp2LRm4NbcFiNEeS12hrb9nUfFL7f"],"license":"MIT"}},"version":1},"id":79}