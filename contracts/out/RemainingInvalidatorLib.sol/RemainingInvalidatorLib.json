{"abi":[{"type":"error","name":"RemainingInvalidatedOrder","inputs":[]}],"bytecode":{"object":"0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122010918dc2011949c0b097a35a23ec2327ff1a419ef8ff8ffde754102a4c3c007164736f6c63430008170033","sourceMap":"469:2663:83:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x5f80fdfea264697066735822122010918dc2011949c0b097a35a23ec2327ff1a419ef8ff8ffde754102a4c3c007164736f6c63430008170033","sourceMap":"469:2663:83:-:0;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"RemainingInvalidatedOrder\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"The remaining amount is used as a nonce to invalidate the order. When order is created, the remaining invalidator is 0. When order is filled, the remaining invalidator is the inverse of the remaining amount.\",\"errors\":{\"RemainingInvalidatedOrder()\":[{\"details\":\"The error is thrown when an attempt is made to invalidate an already invalidated entity.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"RemainingInvalidatorLib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The library provides a mechanism to invalidate order based on the remaining amount of the order.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/RemainingInvalidatorLib.sol\":\"RemainingInvalidatorLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@1inch/limit-order-protocol/contracts/=lib/limit-order-protocol/contracts/\",\":@1inch/solidity-utils/contracts/=lib/solidity-utils/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":limit-order-protocol/=lib/limit-order-protocol/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-utils/=lib/solidity-utils/contracts/\"],\"viaIR\":true},\"sources\":{\"src/libraries/RemainingInvalidatorLib.sol\":{\"keccak256\":\"0x12f1bcde357e2eeb2c752ddd0f0c01111fa5f24a965f53e428e69680bb9f14d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a619eb27c3fd902746675f5ecc5cfbceb06f7a224fadfd98e6fd1c3bd76356d\",\"dweb:/ipfs/QmPKrHorbjoQUUNVFRdynZMqPpJkFEzTEEhm3pcAsdYnGZ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"RemainingInvalidatedOrder"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@1inch/limit-order-protocol/contracts/=lib/limit-order-protocol/contracts/","@1inch/solidity-utils/contracts/=lib/solidity-utils/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","limit-order-protocol/=lib/limit-order-protocol/contracts/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity-utils/=lib/solidity-utils/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/RemainingInvalidatorLib.sol":"RemainingInvalidatorLib"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"src/libraries/RemainingInvalidatorLib.sol":{"keccak256":"0x12f1bcde357e2eeb2c752ddd0f0c01111fa5f24a965f53e428e69680bb9f14d7","urls":["bzz-raw://3a619eb27c3fd902746675f5ecc5cfbceb06f7a224fadfd98e6fd1c3bd76356d","dweb:/ipfs/QmPKrHorbjoQUUNVFRdynZMqPpJkFEzTEEhm3pcAsdYnGZ"],"license":"MIT"}},"version":1},"id":83}